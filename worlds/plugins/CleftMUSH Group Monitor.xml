<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Sunday, July 03 2019 .06-pre -->

<!-- Plugin "CleftMUSH_Group_Window" generated by Plugin Wizard -->

<muclient>
<plugin
   name="CleftMUSH_Group_Window"
   author="Asmodeus, Elisius"
   id="353de94ba6c42060d839e256"
   language="Lua"
   purpose="Group monitor"
   date_written="2019-07-03 12:04:56"
   requires="5.00"
   version="5.76"
   >

</plugin>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   regexp="y"
   match="^(?P<leader>\w+)'s group:$"
   keep_evaluating="y"
   script="start_group"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  >
 </trigger>
  <trigger
   enabled="y"
   regexp="y"
   name="leadertrig"
   match="^(?P<leader>\w+)'s group:$"
   script="istheleader"
   keep_evaluating="y"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  >
 </trigger>
  <trigger
   enabled="y"
   regexp="y"
   name="my_name"
   match="^\[NAME: (?P<name>\w+)\] \[ALIGN: (?P<align>\d+)\]$"
   script="my_name"
   keep_evaluating="y"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  ><send>group_built = true</send>
 </trigger>
  <trigger
   group="group"
   name="player_line"
   enabled="n"
   regexp="y"
   keep_evaluating="y"
   match="^\[(\s+|)(?<level>\d+)\s+(?<tags>[^\s]+)\]\s+(?<name>(\[\w+\]\s+\w+.*\w+|\(\w+\)\s+\w+.*\w+|\w+.*\w+))\s+(?<hp>\d+)\/(\s+|)(?<hp_max>\d+)\s+hp\s+(?<mana>(-\d+|\d+|\?))\/(\s+|)(?<mana_max>(-\d+|\d+|\?))\s+mana\s+(?<moves>\d+)\/(\s+|)(?<moves_max>\d+)\s+mv\s+(?<exp>\d+)\s+xp$"
   script="player_line"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   regexp="y"
   match="^Enemy group:$"
   keep_evaluating="y"
   script="start_enemy_group"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="enemy_group"
   enabled="n"
   regexp="y"
   keep_evaluating="y"
   match="^\[(\s+|)(?<level>\d+)\s+(?<tags>[^\s]+)\]\s+(?<name>\w+.*\w+)\s+(?<hp>\d+)\/(\s+|)(?<hp_max>\d+)\s+hp\s+(?<mana>(-\d+|\d+|\?))\/(\s+|)(?<mana_max>(-\d+|\d+|\?))\s+mana\s+(?<moves>\d+)\/(\s+|)(?<moves_max>\d+)\s+mv\s+(?<exp>\d+)\s+xp$"
   script="enemy_line"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   regexp="y"
   match="^\[G_End\]$"
   script="end_group"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   match="| HP:*/* | MP:*/* | MV:*/* | Enemy:None! | TNL:* | SUPER: * | "
   keep_evaluating="y"
   regexp="n"
   send_to="14"
   sequence="100"
  >
  <send>
    enemy_group = nil
    window(true)
  </send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   regexp="y"
   match="^group$"
   enabled="y"
   sequence="100"
   script="toggle"
  >
  </alias>
  <alias
   regexp="y"
   match="^group minions$"
   enabled="y"
   sequence="100"
   script="toggle_minions"
  >
  </alias>
  <alias
   regexp="y"
   match="^fake group$"
   enabled="y"
   sequence="100"
   script="simulate_group"
  >
  </alias>
  <alias
   regexp="y"
   match="^group debug$"
   enabled="y"
   sequence="100"
   script="ToggleDebug"
   >
  </alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[
require "movewindow"
require "gauge"
require "mw"
require "mw_theme_base"
require "tprint"
require "copytable"


-- ^\[(?<level>\d+) (?<tags>[^\s]+)\] (?<name>.+)\s+(?<hp>\d+)\/(?<hp_max>\d+) hp \s+(?<mana>\d+)\/\s+(?<mana_max>\d+) mana\s+ (?<moves>\d+)\/\s+(?<moves_max>\d+) mv\s+(?<exp>\d+) xp$
-- kxwt_group_start
-- kxwt_group 65 65 119 119 156 156 XL Alas
-- kxwt_group_end
-- kxwt_group <hp> <hp_max> <mana> <mana_max> <move> <move_max> <tag> <name>

local group = {}


-- Tag 'X' - these are your stats.
-- Tag 'Pet' - this is a player.
-- Tag 'Mob' - this is one of your minions.
-- Tag 'O' - this is somebody else's minion.
-- Tag 'P' - any pet mob that doesn't fall into the categories above.

-- Tag 'L' - the group leader
-- Tag 'T' - in tanking mode
-- Tag 'N' - no-melee mode
-- Tag '-' - not present in the room with you

local to_bool = {["0"] = false, ["1"] = true}

local winid = "win_"..GetPluginID()
local myname = GetVariable("myname") or "" -- my name
font_size = 0
font_name = ""

default_x = 868
default_y = 336
default_height = 389
default_width = 600
height = tonumber (GetVariable ("height")) or default_height
width = tonumber (GetVariable ("width")) or default_width
GAP = 4
overlay_numbers = tonumber (GetVariable("overlay_numbers")) or 0
local group_built = false
local group_leader = "" -- group leader
local group_name = "" -- group name
local show_minions = to_bool[GetVariable("show_minions") or "1"] -- show minions
local bg_color = "#000000"
local level_color = "#FF00FF"
local enemy_background_color = "#FF0000"
local title_bg_color = "#303030"
local border_color = "#303030"
local player_border_color = "#AAAAAA"
local enemy_border_color = "#FF0000"
local title_color = "#FFFFFF" -- window title color
local player_color = "#CCCCCC" -- player name color
local leader_color = "#00ff00" -- leader tag color
local tank_color = "#ff3300" -- tank tag color
local minion_color = "#009999" -- minion tag color
local no_melee_color = "#cc00cc" -- no melee tag color
local pet_color = "#FFD700" -- pet mob color
local you_color = "#0066dd" -- you color
local team_color = "#00FFFF" -- you color
--hp_label_color, mana_label_color, moves_label_color = "#DDDDDD", "#DDDDDD", "#DDDDDD"
local overlay_color = "#FFFFFF" -- % overlay color
local biggest_number = 1 -- biggest number for hp/mana/moves, to set player box size
local overlay_pct = to_bool[GetVariable("overlay_pct") or "1"] -- show % overlay
local show_numbers = to_bool[GetVariable("show_numbers") or "1"] -- show numbers after gauge
local show_mana = to_bool[GetVariable("show_mana") or "1"] -- show mana
local show_moves = to_bool[GetVariable("show_moves") or "1"] -- show moves
local last_refresh = 1 -- last window refresh
local font_name = "Lucida Console"

local window_visible = true -- always start out with visible window
local title = "Group Info: Use LOOK to draw the bars, or if this is your first time using the window type setup prompt"
local line_height = font_size+4 -- height of bars
local bar_width = tonumber(GetVariable("bar_width")) or 200 -- width of bars
local bar_ticks = 9 -- number of ticks to show on bar
local bar_border = "#777777" -- bar surrounding the gauges
local enemy_hp_color = GetVariable("enemy_hp_color") or "#FF0000" -- color of bar
local hp_color = GetVariable("hp_color") or "#00ff00" -- color of bar
local mana_color = GetVariable("mana_color") or "#0000FF" -- color of bar
local moves_color = GetVariable("moves_color") or "#FFD700" -- color of bar
local hp_label_color = hp_color -- hp label color
local enemy_hp_label_color = enemy_hp_color -- enemy hp label color
local mana_label_color = mana_color -- mana label color
local moves_label_color = moves_color -- moves label color
local height = GetVariable("height") or 400
local width = GetVariable("width") or 440
local top = GetVariable("top") or 20
local grip_resize = 10 -- resize grip size
local debug_state = GetVariable("debug_state") or false
local font_id = "font"
RESIZE_TAG_SIZE = 10
MIN_SIZE        = 100
-- Variables not saved.
startx      = ""
starty      = ""
posx        = ""
posy        = ""
windowinfo = nil

function ToggleDebug()
  debug_state = not debug_state
  NotifyNote("Debug is now " .. tostring(debug_state))
  SetVariable("debug_state", tostring(debug_state))
  SaveState()
end

function SetUpHotspotsAndDraw(firstTime)
  -- don't use windowcreate after the first time, because it messes with hotspot handlers
  if (firstTime == true) then
    check (WindowCreate (winid,
      windowinfo.window_left, windowinfo.window_top,   -- left, top (auto-positions)
      width,     -- width
      height,  -- height
      windowinfo.window_mode,       -- auto-position: middle right
      windowinfo.window_flags,  -- flags
    Theme.PRIMARY_BODY) )
    -- Add the drag handler so they can move the window around
    movewindow.add_drag_handler (winid, 0, 0, 0, 0)

    if hidden == 0 then
      WindowShow (winid, true)
    end
  else
    -- everything has already been made
    -- just move them back into place
    WindowResize(winid, width, height, Theme.PRIMARY_BODY)
  end
  show_group()
end

function NotifyNote(message)
  ColourNote ("Green", "", message)
end

function ErrorNote(message)
  ColourNote ("Red", "", message)
end

function DebugNote(message)
  if(debug_state) then
    Note(message)
  end
end

function toggle()
  window_visible = not window_visible
  if not window_visible then -- remove window
    WindowDelete(winid)
  else
    window(true)
  end
end

function toggle_minions()
  show_minions = not show_minions
  window(false)
end

function start_group()
  EnableTriggerGroup("group", true)
  group = {}
end

function start_enemy_group()
  EnableTriggerGroup("group", false)
  EnableTriggerGroup("enemy_group", true)
  enemy_group = {}
end

function player_line(name, line, args)
  tmp_tags = split(args.name, args.tags)
  -- Insert YOU tag
  if(args.name == myname) then
    table.insert(tmp_tags, "You")
  end
  table.insert(group, {hp = args.hp, hp_max = args.hp_max, mana = args.mana, mana_max = args.mana_max, moves = args.moves, moves_max = args.moves_max, tags = tmp_tags, name = args.name, level = args.level})
end

function enemy_line(name, line, args)
  --tprint(args)
  table.insert(enemy_group, {hp = args.hp, hp_max = args.hp_max, mana = args.mana, mana_max = args.mana_max, moves = args.moves, moves_max = args.moves_max, tags = tmp_tags, name = args.name, level = args.level})
end

function my_name(name, line, args)
  myname = args.name
  SaveState()
end

function prompt_line(name, line, args)
  if myname == "" then -- my name isnt set so dont try to update group stats
    NotifyNote("My name is not set yet. Going to toggle ctriggers. This probably only happens when re-installing the group plugin.")
    SendNoEcho("pbust Playername: %n")
    --SendNoEcho("set ctrigger on")
    return
  end
  for i, player in ipairs(group) do
    if string.lower(player.name) == string.lower(myname) then
      player.hp = args.hp
      player.hp_max = args.hp_max
      player.mana = args.mana
      player.mana_max = args.mana_max
      player.moves = args.moves
      player.moves_max = args.moves_max
      player.level = args.level
      window(false)
      return
    end
  end
  for i, player in ipairs(enemy_group) do
    if string.lower(player.name) == string.lower(myname) then
      player.hp = args.hp
      player.hp_max = args.hp_max
      player.mana = args.mana
      player.mana_max = args.mana_max
      player.moves = args.moves
      player.moves_max = args.moves_max
      player.level = args.level
      window(false)
      return
    end
  end
end

function end_group()
  EnableTriggerGroup("enemy_group", false)
  set_order() -- flag as minion, pet, player
  get_biggest_number() -- get longest hp/mana/moves number to format box size
  table.sort(group, by_player)
  window(true)
end

function get_biggest_number()
  for i, player in ipairs(group) do
    if (not show_minions and player.minion < 1) or show_minions then
      if #player.hp_max > biggest_number then
        biggest_number = #player.hp_max
      end
      if #player.mana_max > biggest_number then
        biggest_number = #player.mana_max
      end
      if #player.moves_max > biggest_number then
        biggest_number = #player.moves_max
      end
    end
  end
end

function split(n, t)
  local tags = {}
  for i = 1, #t do
    local tag = string.sub(t, i)
    table.insert(tags, tag)
  end
  return tags
end


function is_minion(tags)
  for i, tag in ipairs(tags) do
    if tag == "Mob" then
      return true
    end
  end
  return false
end

function is_pet(tags)
  for i, tag in ipairs(tags) do
    if tag == "Pet" then
      return true
    end
  end
  return false
end

function is_you(tags)
  for i, tag in ipairs(tags) do
    if tag == "You" then
      return true
    end
  end
  return false
end


function is_no_melee(tags)
  for i, tag in ipairs(tags) do
    if tag == "N" then
      return true
    end
  end
  return false
end

function istheleader(name, line, wildcards)
  group_leader = wildcards.leader
end

function is_tank(tags)
  for i, tag in ipairs(tags) do
    if tag == "T" then
      return true
    end
  end
  return false
end


function set_order()
  for i, player in ipairs(group) do
    if is_minion(player.tags) then
      player.minion = 3
    elseif is_pet(player.tags) then
      player.minion = 2
    elseif is_you(player.tags) then
      player.minion = 1
    else
      player.minion = 0
    end
  end
end

function by_player(a, b)
  return a.minion < b.minion
end

function window(redraw)
  if not window_visible then
    return
  end

  if redraw then
    --WindowDelete("winid")

    local fonts = utils.getfontfamilies ()
    -- if Dina not there already, add it
    if not fonts ["Fixedsys Excelsior"] then
      AddFont (GetInfo (66) .. "\\FSEX300.ttf")
      print("ADDED FONT")
      fonts = utils.getfontfamilies ()
    end

      default_font_size = 12
      default_font_name = "Fixedsys Excelsior"

    font_id = "font"
    font_name = GetVariable("font_name") or default_font_name
    font_size = tonumber(GetVariable("font_size")) or default_font_size
    --windowinfo = movewindow.install(winid, miniwin.pos_center, miniwin.create_absolute_location, false, nil, {mouseup=MouseUp, mousedown=LeftClickOnly, dragmove=LeftClickOnly, dragrelease=LeftClickOnly},{x=default_x, y=default_y})
    --WindowCreate(winid, windowinfo.window_left, windowinfo.window_top, width, height, windowinfo.window_mode, windowinfo.window_flags, Theme.SECONDARY_BODY)
    WindowFont(winid, font_id, font_name, font_size, false, false, false, false, 0) -- normal font
    WindowFontInfo (winid, font_id, 1)
    WindowFontInfo (winid, font_id, 4)
    line_height = WindowFontInfo (winid, font_id, 1) -  WindowFontInfo (winid, font_id, 4) + 2
    title_height = line_height*2+4
    --WindowPosition(winid, windowinfo.window_left, windowinfo.window_top, 0, 2)
    WindowSetZOrder(winid, 201)
    --	    WindowFont(winid, font_id, font_name, font_size, false, false, false, false)
    --	    WindowFont(winid, font_id, font_name, font_size, true, false, false, false)
    --	    WindowFont(winid, font_id, font_name, font_size - 1, false, false, false, false)
    --movewindow.install(winid, 6, 2, true, nil, {mouseup=MouseUp, mousedown=MouseDown, dragmove=LeftClickOnly, dragrelease=LeftClickOnly})
    -- register with the z-order monitor
    CallPlugin("462b665ecb569efbf261422f", "registerMiniwindow", winid)
    movewindow.add_drag_handler (winid, 0, 0, 0, height)
    WindowAddHotspot(winid, "resize", width - grip_resize, height - grip_resize, width, height, "MouseOver", "CancelMouseOver", "MouseDown", "", "MouseUp", "", 6, 0)
    WindowDragHandler(winid, "resize", "ResizeMoveCallback", "ResizeReleaseCallback", 0)
  else
    WindowResize(winid, width, height, ColourNameToRGB(bg_color))
    WindowMoveHotspot(winid, "resize", width - grip_resize, height - grip_resize, width, height)
  end
  WindowShow(winid, true)
  show_group()
end

function trim(str)
  if str then
    return (str:gsub("^%s*(.-)%s*$", "%1"))
  else
    return ""
  end
end

function truncate(str)
  if #str <= 17 then
    return str
  end
  return trim(string.sub(str, 1, 16))..".."
end

function bigtruncate(str)
  if str >= 16 then
    return str
  end
  return trim(string.sub(str, 1, 17))..".."
end


function abbreviate(str,length)
  if length == nil then
    length=22
  end
  if string.len(str)>length then
    return string.sub(str, 1, length)..string.char(133)
  else
    return str
  end
end
function nonumberabbreviate(str,length)
  if length == nil then
    length=20
  end
  if string.len(str)>length then
    return string.sub(str, 1, length)..string.char(133)
  else
    return str
  end
end

function limit_n(num) --function nlim(num) --Yeah, I keep shortening things
  n=tonumber(num) --Try to coerce into numeric

  if n == nil then --we have a non numeric value
    --print(string.format('"%s" was not converted to a number', tostring(num)))
    return string.sub(tostring(num), 1, 5) -- so just return the first 5 characters of the string
  else --numeric
    usn=math.abs(n)    --So get absolute value for scale testing
    --print(string.format("abs(%.2f)=%.2f"),n,usn)
  end
  --Now test the absolute value for scale
  if usn < 10^5 then
    return tostring(n)
  elseif usn < 10^6 then
    return string.format("%.0fk", n / 10^3)
  elseif usn < 10^9 then
    return string.format("%.0fm", n / 10^6)
  elseif usn < 10^12 then
    return string.format("%.0fb", n / 10^9)
  elseif usn < 10^15 then
    return string.format("%.0ft", n / 10^12)
  else
    return string.format("%.0fq", n / 10^15)
  end
end

function drawPlayer(player, i, isPlayerOrEnemy)
  if is_tank(player.tags) or (not show_minions and player.minion == 0) or show_minions then
    local padding = 3
    local box_top, box_right, box_bottom = top, 1, nil
    across = across + 1 -- how many players fit across window
    box_top = top + font_size/2
    --	print("Font Size: ", font_size)
    top = font_size/3 + box_top or 17
    local x = 0

    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- DRAW TEXT FOR SMALL/LARGE BARS --------------------------------------
    if isPlayerOrEnemy or not isPlayerOrEnemy then
      --print("bar_width: ", bar_width)
      compact_mode = false
      --print("Compact_mode: ", compact_mode)
      if compact_mode == true then
        --Thing 1
        -- Draw player
        x = x + labels_width + GAP
        txt = WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
        txtlen = WindowTextWidth(winid,font_id,txt)
        x = x + WindowText(winid, font_id, truncate(player.name), left + 22, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 6 -- player name truncated

        WindowAddHotspot(winid, "player"..i, left + 18, top + 2, left + 100, top + 16, "", "", "", "", "", player.name, 0, 0) -- show title for truncated player

        if show_numbers then
          x = x + WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
          x = x + WindowText(winid, font_id, truncate(player.name), left + 22, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 6 -- player name truncated
        else
          x = WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
          x = x + WindowText(winid, font_id, truncate(player.name), left + 22, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 6 -- player name truncated
        end


        if is_no_melee(player.tags) then
          x = x + WindowText(winid, font_id, "N", x, top + padding, 0, 0, ColourNameToRGB(no_melee_color), false) + 2 -- show if no melee
        end
      elseif compact_mode == false then
        x = x + WindowText(winid, font_id, "Lv["..player.level.."]", left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
        x = x + WindowText(winid, font_id, truncate(player.name), left + 50+font_size*10.5-45, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8 -- player name truncated

        if is_no_melee(player.tags) then
          x = x + WindowText(winid, font_id, "[N]", x, top + padding, 0, 0, ColourNameToRGB(no_melee_color), false) -- show if no melee
        end
      end
    else -- isPlayerOrEnemy
    end -- if isPlayerOrEnemy
    ---- END DRAW TEXT FOR SMALL/LARGE BARS ----------------------------------
    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

    local no_num_bar_width_100_x = bar_width + WindowTextWidth(winid, font_id, "**", false)
    local show_numbers_100_x = left + 180 + font_size - 2
    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- YOU -----------------------------------------------------------------
    if is_you(player.tags) and not (group_leader == player.name) and not is_minion(player.tags) and isPlayerOrEnemy then
      if compact_mode == true then
        if show_numbers then
          x = x + WindowText(winid, font_id, "Y", show_numbers_100_x, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if you
          --  else
          --     x = x + WindowText(winid, font_id, "Y", no_num_bar_width_100_x + padding*2, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if you
        end
      end
      if compact_mode == true and not show_numbers then
        x = x + WindowText(winid, font_id, "Y", left + 110, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if minion
      end
      if compact_mode == false then
        if show_numbers then
          x = x + WindowText(winid, font_id, "[YOU]", bar_width+left+19, top + padding, 0, 0, ColourNameToRGB(you_color), false) -- show if you
        else
          x = x + WindowText(winid, font_id, "Y", left + 210, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if you
        end
      end
    end
    ---- END YOU -------------------------------------------------------------
    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- TEAM-MATE -----------------------------------------------------------------
    if not is_you(player.tags) and not (group_leader == player.name) and not is_minion(player.tags) and not is_pet(player.tags) and isPlayerOrEnemy  then
      if compact_mode == true then
        if show_numbers then
          x = x + WindowText(winid, font_id, "T", show_numbers_100_x, top + padding, 0, 0, ColourNameToRGB(team_color), false) + 2 -- show if you
          --  else
          --     x = x + WindowText(winid, font_id, "Y", no_num_bar_width_100_x + padding*2, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if you
        end
      end
      if compact_mode == true and not show_numbers then
        x = x + WindowText(winid, font_id, "T", left + 110, top + padding, 0, 0, ColourNameToRGB(team_color), false) + 2 -- show if minion
      end
      if compact_mode == false then
        if show_numbers then
          x = x + WindowText(winid, font_id, "[TEAM]", bar_width+left+19+font_size*2.5-8, top + padding, 0, 0, ColourNameToRGB(team_color), false) -- show if you
        else
          x = x + WindowText(winid, font_id, "T", left + 210, top + padding, 0, 0, ColourNameToRGB(team_color), false) + 2 -- show if you
        end
      end
    end
    ---- END TEAM-MATE -------------------------------------------------------------
    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- LEADER --------------------------------------------------------------
    if group_leader == player.name then
      if compact_mode == true then
        if show_numbers then
          x = x + WindowText(winid, font_id, "L", show_numbers_100_x, top + padding, 0, 0, ColourNameToRGB(leader_color, false) + 2)
          --   else
          --x = x + WindowText(winid, font_id, "L", left + no_num_bar_width_100_x - 1, top + padding, 0, 0, ColourNameToRGB(leader_color), false) + 2
        end
      end
      if compact_mode == true and not show_numbers then
        x = x + WindowText(winid, font_id, "L", left + 110, top + padding, 0, 0, ColourNameToRGB(leader_color), false) + 2 -- show if minion
      end

      if compact_mode == false then
        if show_numbers then
          x = x + WindowText(winid, font_id, "[LEADER]", bar_width+left+19+font_size*2.5-8, top + padding, 0, 0, ColourNameToRGB(leader_color), false) -- show if leader -- used to be left+240
        else
          x = x + WindowText(winid, font_id, "L", left+210, top + padding, 0, 0, ColourNameToRGB(leader_color), false) + 2 -- show if leader
        end
      end
    end
    ---- END LEADER ----------------------------------------------------------
    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- PETS ----------------------------------------------------------------
    if is_pet(player.tags) and isPlayerOrEnemy then
      if compact_mode == true then
        if show_numbers then
          x = x + WindowText(winid, font_id, "P", show_numbers_100_x, top + padding, 0, 0, ColourNameToRGB(pet_color), false) + 2 -- show if pet
          -- else
          --   x = x + WindowText(winid, font_id, "P", left + bar_width - 1, top + padding, 0, 0, ColourNameToRGB(pet_color), false) + 2 -- show if pet
        end
      end
      if compact_mode == true and not show_numbers then
        x = x + WindowText(winid, font_id, "P", left + 110, top + padding, 0, 0, ColourNameToRGB(pet_color), false) + 2 -- show if minion
      end

      if compact_mode == false then
        if show_numbers then
          x = x + WindowText(winid, font_id, "[PET]", bar_width+left+19+font_size*2.5-8, top + padding, 0, 0, ColourNameToRGB(pet_color), false) -- show if pet
        else
          x = x + WindowText(winid, font_id, "P", left + 210, top + padding, 0, 0, ColourNameToRGB(pet_color), false) + 2 -- show if pet
        end
      end
    end
    ---- END PETS ------------------------------------------------------------
    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- MINIONS -------------------------------------------------------------
    if is_minion(player.tags) and isPlayerOrEnemy then
      if compact_mode == true then
        if show_numbers then
          x = x + WindowText(winid, font_id, "C", show_numbers_100_x, top + padding, 0, 0, ColourNameToRGB(minion_color), false) + 2 -- show if minion
          -- else
          --  x = x + WindowText(winid, font_id, "C", x + padding - 1, top + padding, 0, 0, ColourNameToRGB(minion_color), false) + 2 -- show if minion
        end
      end
      if compact_mode == true and not show_numbers then
        x = x + WindowText(winid, font_id, "C", left + 110, top + padding, 0, 0, ColourNameToRGB(minion_color), false) + 2 -- show if minion
      end

      if compact_mode == false then
        if show_numbers then
          x = x + WindowText(winid, font_id, "[CHARM]", bar_width+left+19+font_size*2.5-8, top + padding, 0, 0, ColourNameToRGB(minion_color), false)  -- show if minion
        else
          x = x + WindowText(winid, font_id, "C", left + 210, top + padding, 0, 0, ColourNameToRGB(minion_color), false) + 2 -- show if minion
        end
      end
    end
    ---- END MINIONS ---------------------------------------------------------

    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- ENEMIES -------------------------------------------------------------
    if not isPlayerOrEnemy then
      if compact_mode == true then
        if show_numbers then
          x = x + WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
          x = x + WindowText(winid, font_id, truncate(player.name), left + 22, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8 -- player name
          x = WindowText(winid, font_id, "E", show_numbers_100_x, top + padding, 0, 0, ColourNameToRGB(tank_color), false) -- show if enemy
        end
      end
      if compact_mode == true and not show_numbers then
        x = x + WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
        x = x + WindowText(winid, font_id, truncate(player.name), left + 22, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8 -- player name
        x = x + WindowText(winid, font_id, "E", left + 110, top + padding, 0, 0, ColourNameToRGB(tank_color), false) + 2 -- show if minion
      end
      if compact_mode == false then
        if show_numbers then
          --		  print("Player Name: ", player.name)
          --		  print("Player Level: ", player.level)
          --x = WindowRectOp(winid, 2, left - 3, top, 307, 198, ColourNameToRGB(enemy_background_color))
          x = WindowText(winid, font_id, "Lv["..player.level.."]", left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
          x = x + WindowText(winid, font_id, truncate(player.name), left + 50, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8 -- player name
          x = WindowText(winid, font_id, "[ENEMY]", bar_width+left+19+font_size*2.5-8, top + padding, 0, 0, ColourNameToRGB(tank_color), false) -- show if enemy
        else
          x = WindowText(winid, font_id, "Lv["..player.level.."]", left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
          x = x + WindowText(winid, font_id, truncate(player.name), left + 50, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8 -- player name
          x = x + WindowText(winid, font_id, "E", left + 210, top + padding, 0, 0, ColourNameToRGB(tank_color), false) + 2 -- show if minion
        end
      end
    end
    ---- END ENEMIES ---------------------------------------------------------
    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

    -- Magic
    top = top + line_height + 4

    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- DRAW BARS -----------------------------------------------------------
    if isPlayerOrEnemy then
      x = WindowText(winid, font_id, "HP", left, top, 0, 0, ColourNameToRGB(hp_label_color), false) + left -- label and padding
      gauge(winid, "HP for "..player.name, tonumber(player.hp), tonumber(player.hp_max), x + padding, top, bar_width, line_height, ColourNameToRGB(hp_color), 0x000000, bar_ticks, ColourNameToRGB(bar_border), ColourNameToRGB(bar_border), nil, flat_gauges==1) -- hp gauge
    elseif not isPlayerOrEnemy then
      x = WindowText(winid, font_id, "HP", left, top, 0, 0, ColourNameToRGB(enemy_hp_label_color), false) + left -- label and padding
      gauge(winid, "HP for "..player.name, tonumber(player.hp), tonumber(player.hp_max), x + padding, top, bar_width, line_height, ColourNameToRGB(enemy_hp_color), 0x000000, bar_ticks, ColourNameToRGB(bar_border), ColourNameToRGB(bar_border), nil, flat_gauges==1) -- hp gauge
    end
    if overlay_pct then
      outlined_text(winid, font_id, math.floor(player.hp / player.hp_max * 100).."%", x + 6, top + 2, 0, 0, ColourNameToRGB(overlay_color), false) -- hp %
    end
    if show_numbers then
      box_right = x + bar_width + WindowTextWidth(winid, font_id, string.rep("X", biggest_number).."/"..string.rep("X", biggest_number)) + 14 -- set max size of hp/mana/moves on side of gauge
      WindowText(winid, font_id, limit_n(player.hp).."/"..limit_n(player.hp_max), x + 6 + bar_width, top, 0, 0, ColourNameToRGB(overlay_color), false) -- hp
    else
      box_right = x + bar_width + 6
    end
    top = top + line_height + 2

    if show_mana then
      x = WindowText(winid, font_id, "MN", left, top, 0, 0, ColourNameToRGB(mana_label_color), false) + left -- label and padding
      gauge(winid, "Mana for "..player.name, tonumber(player.mana), tonumber(player.mana_max), x + padding, top, bar_width, line_height, ColourNameToRGB(mana_color), 0x000000, bar_ticks, ColourNameToRGB(bar_border), ColourNameToRGB(bar_border), nil, flat_gauges==1) -- mana gauge
      --         txtlen = WindowTextWidth(winid,font_id,x)
      local is_number = tonumber(player.mana) and tonumber(player.mana_max)
      if (is_number and overlay_pct) then
        outlined_text(winid, font_id, math.floor(player.mana / player.mana_max * 100).."%", x + 6, top + 2, 0, 0, ColourNameToRGB(overlay_color), false) -- mana %
      end
      if show_numbers then
        WindowText(winid, font_id, player.mana.."/"..player.mana_max, x + 6 + bar_width, top, 0, 0, ColourNameToRGB(overlay_color), false) -- mana
      end
      top = top + line_height + 2

      if show_moves then
        x = WindowText(winid, font_id, "MV", left, top, 0, 0, ColourNameToRGB(moves_label_color), false) + left -- label and padding
        gauge(winid, "Moves for "..player.name, tonumber(player.moves), tonumber(player.moves_max), x + padding, top, bar_width, line_height, ColourNameToRGB(moves_color), 0x000000, bar_ticks, ColourNameToRGB(bar_border), ColourNameToRGB(bar_border), nil, flat_gauges==1) -- moves gauge
        if overlay_pct then
          outlined_text(winid, font_id, math.floor(player.moves / player.moves_max * 100).."%", x + 6, top + 2, 0, 0, ColourNameToRGB(overlay_color), false) -- moves %
        end
        if show_numbers then
          WindowText(winid, font_id, player.moves.."/"..player.moves_max, x + 6 + bar_width, top, 0, 0, ColourNameToRGB(overlay_color), false) -- moves
        end
        top = top + line_height + 2
      end
    end
    ---- END DRAW BARS -------------------------------------------------------
    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- BORDER/MISC ---------------------------------------------------------
    box_bottom = top + 1
    if isPlayerOrEnemy then
      WindowRectOp(winid, 1, left - 3, box_top, box_right, box_bottom, ColourNameToRGB(player_border_color)) -- player border
    else
      WindowRectOp(winid, 1, left - 3, box_top, box_right, box_bottom, ColourNameToRGB(enemy_border_color))
      --WindowRectOp(winid, 2, left - 3, box_top, box_right, box_bottom, ColourNameToRGB(enemy_background_color))
    end
    ---- END BORDER/MISC -----------------------------------------------------
    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
    ---- Row Calculations ----------------------------------------------------
    if width - box_right - (box_right - left + 5) > 0 then -- keep drawing across
      left = left + (box_right - left) + 4
      top = 17 + (rows * (box_bottom - box_top + 2)) + font_size*2
    else -- start new row
      rows = rows + 1
      across = 0
      left = 7
      top = 17 + (rows * (box_bottom - box_top + 2)) + font_size*2
    end
    ---- END Row Calculations ------------------------------------------------
    ---- <><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><><>
  end
end

function show_group()
  WindowRectOp(winid, 2, 2, 1, -2, -2, ColourNameToRGB(bg_color)) -- blank canvas
  --WindowRectOp(winid, 2, 0, 0, 0, 22, ColourNameToRGB(title_bg_color)) -- title background
  --WindowRectOp(winid, 1, 0, 0, 0, 0, ColourNameToRGB(border_color)) -- border
  --Theme.Draw3DRect(winid, 0, 0, 0, 0, depressed) -- themed window
  if not group_built then
    txt = "No Group To Display"
    txtlen = WindowTextWidth(winid,font_id, txt)
    WindowText(winid, font_id, txt, (width-txtlen)/2, title_height/4, 0, 0, Theme.BODY_TEXT, utf8)
    txt = "Group info will appear"
    txtlen = WindowTextWidth(winid,font_id,txt)
    WindowText (winid, font_id, txt, (width-txtlen)/2, height/2, 0, 0, Theme.BODY_TEXT, utf8)
    txt = "once you create or join one."
    txtlen = WindowTextWidth(winid,font_id,txt)
    WindowText (winid, font_id, txt, (width-txtlen)/2, height/2+line_height, 0, 0, Theme.BODY_TEXT, utf8)
    title = "Group Info: Use LOOK to draw the bars, or if this is your first time using the window type setup prompt" -- default title
    y = title_height
  end
  -- MAIN DISPLAY BODY
  local baseX = GAP
  local baseY = y+GAP
  column_width = WindowTextWidth(winid, font_id, "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW")+GAP*4
  if overlay_numbers == 0 then
    column_width = column_width+WindowTextWidth(winid, font_id, "WWWW")
  end
  num_columns = math.max(math.floor(width / column_width), 1)
  members_per_col = math.ceil((#group)/num_columns)
  labels_width = math.max(WindowTextWidth(winid, font_id, "HP"), WindowTextWidth(winid, font_id, "MN"), WindowTextWidth(winid, font_id, "MV"))
  bar_width = column_width - GAP*4 - labels_width
  if overlay_numbers == 0 then
    bar_width = bar_width - WindowTextWidth(winid, font_id, "88888/88888")
  end
  if group_leader ~= "" then -- group leader
    group_built = true
    if group_built then
      title = "Group Leader: " .. group_leader
    end
  end
  --This should go in OnPluginInstall and actually set title_bar to the return value of Theme.DrawTitleBar instead of this awkward af placing.
  Theme.DrawTitleBar(winid, font_id, title, "center") -- them window title (has to be drawn before border) This is the title bar that says the leader name

  Theme.DrawBorder(winid) -- theme window border
  --Theme.Draw3DRect(winid, -1, -1, WindowInfo(winid, 3)-1, title_height, false)

  left, top = 7, 17 + font_size*2-- bar loc+ font_size*2ation
  across = 0
  rows = 0
  -- [L][M][O][N][TANK]  green, dark cyan, white, magenta, red
  -- Find YOU in group list and put YOU first.
  for k, v in pairs(group) do
    if (v.name == myname) then
      group[k], group[1] = group[1], group[k]
    end
  end

  for i, player in ipairs(group) do
    drawPlayer(player, i, true)
  end

  if enemy_group then
    for i,player in ipairs(enemy_group) do
      drawPlayer(player, i, false)
    end
  end
  Theme.AddResizeTag(winid, 2, nil, nil, "MouseDown", "ResizeMoveCallback", "ResizeReleaseCallback") -- resize grip
end -- DrawPlayer

function ResizeMoveCallback()
  if GetPluginVariable("c293f9e7f04dde889f65cb90", "lock_down_miniwindows") == "1" then
    return
  end
  posx, posy = WindowInfo (winid, 17), WindowInfo (winid, 18)
  width = width + posx - startx
  startx = posx
  if (width < MIN_SIZE) then
    width = MIN_SIZE
    startx = windowinfo.window_left+width
  elseif (windowinfo.window_left+width > GetInfo(281)) then
    width = GetInfo(281)-windowinfo.window_left
    startx = GetInfo(281)
  end

  height = height + posy - starty
  starty = posy
  local min_lines = 1
  if show_hp == 1 then
    min_lines = min_lines + 1
  end
  if show_mn == 1 then
    min_lines = min_lines + 1
  end
  if show_mv == 1 then
    min_lines = min_lines + 1
  end
  if (height < title_height+(min_lines*line_height)+(2*GAP)+min_lines-1) then
    height = title_height+(min_lines*line_height)+(2*GAP)+min_lines-1
    starty = windowinfo.window_top+height
  elseif (windowinfo.window_top+height > GetInfo(280)) then
    height = GetInfo(280)-windowinfo.window_top
    starty = GetInfo(280)
  end
  if (utils.timer() - lastRefresh > 0.0333) then
    SetUpHotspotsAndDraw(false)
    lastRefresh = utils.timer()
  end
end

lastRefresh = 0


function ResizeReleaseCallback()
  window(true)
  SaveState()
end

function MouseDown(flags, hotspot_id)
  if (hotspot_id == "resize") then
    startx, starty = WindowInfo (winid, 17), WindowInfo (winid, 18)
  end
end

function MouseUp(flags, hotspot_id, winid)
  if bit.band (flags, miniwin.hotspot_got_rh_mouse) ~= 0 then
    right_click_menu()
  end
  return true
end

function right_click_menu()
  local x, y = WindowInfo(winid, 14), WindowInfo(winid, 15)

  local str = "!"

  if show_minions then
    str = str.."Hide Minions"
  else
    str = str.."Show Minions"
  end

  if show_mana then
    str = str.."|-|Hide Mana"
  else
    str = str.."|-|Show Mana"
  end

  if show_moves then
    str = str.."|Hide Moves"
  else
    str = str.."|Show Moves"
  end

  if compact_mode == false then
    str = str.."|-|Compact Bars"
  else
    str = str.."|-|Full Size Bars"
  end

  str = str.."|-|>Colors|HP|Enemy HP|Mana|Moves|<"

  if overlay_pct then
    str = str.."|-|Hide % Overlay"
  else
    str = str.."|-|Show % Overlay"
  end

  if show_numbers then
    str = str.."|-|Hide Totals"
  else
    str = str.."|-|Show Totals"
  end

  str = str.."|-|Bring to Front"

  str = str.."|-|Send to Back"

  str = str.."|-|Change Font"

  opt = WindowMenu(winid, x, y, str)

  if opt == "" then
    return
  end

  opt = tonumber(opt)

  if opt == 1 then -- toggle minions
    show_minions = not show_minions
    SaveState()
  elseif opt == 2 then -- toggle mana
    show_mana = not show_mana
    SaveState()
  elseif opt == 3 then -- toggle moves
    show_moves = not show_moves
    SaveState()
  elseif opt == 4 then -- 1/2 width bars
    if compact_mode == false then
      bar_width = 100
    else
      bar_width = 200
    end
    SaveState()
  elseif opt == 5 then -- hp color
    local clr = PickColour(ColourNameToRGB(hp_color))
    if clr ~= -1 then
      hp_color = RGBColourToName(clr)
      SaveState()
    end
  elseif opt == 6 then -- enemy hp color
    local clr = PickColour(ColourNameToRGB(enemy_hp_color))
    if clr ~= -1 then
      enemy_hp_color = RGBColourToName(clr)
      SaveState()
    end
  elseif opt == 7 then -- mana color
    local clr = PickColour(ColourNameToRGB(mana_color))
    if clr ~= -1 then
      mana_color = RGBColourToName(clr)
      SaveState()
    end
  elseif opt == 8 then -- moves color
    local clr = PickColour(ColourNameToRGB(moves_color))
    if clr ~= -1 then
      moves_color = RGBColourToName(clr)
      SaveState()
    end
  elseif opt == 9 then -- overlay %
    overlay_pct = not overlay_pct
    SaveState()
  elseif opt == 10 then -- number totals after bar
    show_numbers = not show_numbers
    SaveState()
  elseif opt == 11 then -- Bring to Front
    CallPlugin("462b665ecb569efbf261422f","boostMe", winid)
    --  print("Bring to Front")
    SaveState()
  elseif opt == 12 then -- Send to back
    CallPlugin("462b665ecb569efbf261422f","dropMe", winid)
    --  print("Sent to Back")
    SaveState()
  elseif opt == 13 then -- Change Font
    wanted_font = utils.fontpicker (font_name, font_size) --font dialog
    if wanted_font then
      font_name = wanted_font.name
      font_size = wanted_font.size
      SetVariable("font_name", font_name)
      SetVariable("font_size", font_size)

    end
  end
  window(true)
end

function CancelMouseOver(flags, id)
end

function CancelMouseDown(flags, id)
end

function OnPluginEnable()
  window(true)
end

function OnPluginDisable()
  WindowDelete(winid)
end

function OnPluginClose()
  WindowDelete(winid)
end

function from_bool(v)
  if v then
    return 1
  end
  return 0
end

function OnPluginInstall()

  local fonts = utils.getfontfamilies ()
  -- if Dina not there already, add it
  if not fonts ["Fixedsys Excelsior"] then
    AddFont (GetInfo (66) .. "\\FSEX300.ttf")
    print("ADDED FONT")
    fonts = utils.getfontfamilies ()
  end

    default_font_size = 12
    default_font_name = "Fixedsys Excelsior"

  font_id = "font"
  font_name = GetVariable("font_name") or default_font_name
  font_size = tonumber(GetVariable("font_size")) or default_font_size

  windowinfo = movewindow.install(winid, miniwin.pos_center, miniwin.create_absolute_location, false, nil, {mouseup=MouseUp, mousedown=LeftClickOnly, dragmove=LeftClickOnly, dragrelease=LeftClickOnly},{x=default_x, y=default_y})
  --WindowCreate(winid, windowinfo.window_left, windowinfo.window_top, width, height, windowinfo.window_mode, windowinfo.window_flags, Theme.SECONDARY_BODY)
  WindowFont(winid, font_id, font_name, font_size, false, false, false, false, 0) -- normal font

  --- Grab font size settings.
  line_height = 10--WindowFontInfo (winid, font_id, 1) -  WindowFontInfo (winid, font_id, 4) + 2
  title_height = 10 --line_height*2+4

  -- if disabled last time, stay disabled
  if GetVariable ("enabled") == "false" then
    ColourNote ("yellow", "", "Warning: Plugin " .. GetPluginName ().. " is currently disabled.")
    check (EnablePlugin(GetPluginID (), false))
    return
  end -- they didn't enable us last time

  -- Draw the initial group window
  SetUpHotspotsAndDraw(true)
end


function OnPluginSaveState()
  SetVariable("enabled", tostring(GetPluginInfo(GetPluginID (), 17)))
  if WindowInfo(winid, 3) and WindowInfo(winid, 4) then
    width = WindowInfo(winid, 3)
    height = WindowInfo(winid, 4)
  end
  SetVariable("myname", myname)
  SetVariable("font_name", font_name)
  SetVariable("font_size", font_size)
  SetVariable("width", width)
  SetVariable("height", height)
  SetVariable("show_minions", from_bool(show_minions)) -- show minions
  SetVariable("show_mana", from_bool(show_mana)) -- show mana
  SetVariable("show_moves", from_bool(show_moves)) -- show moves
  SetVariable("overlay_pct", from_bool(overlay_pct)) -- show % overlay
  SetVariable("show_numbers", from_bool(show_numbers)) -- show totals
  SetVariable("hp_color", hp_color) -- hp color
  SetVariable("enemy_hp_color", enemy_hp_color) -- enemy hp color
  SetVariable("mana_color", mana_color) -- mana color
  SetVariable("moves_color", moves_color) -- moves color
  SetVariable("bar_width", bar_width) -- bar width
  SetVariable("top", top)
  SetVariable("debug_state", tostring(debug_state))
end




function loaded()
  Note()
  ColourNote("darkmagenta", "white", " Cleft of Dimensions group plugin v"..GetPluginInfo(GetPluginID(), 19).." installed! ")
  Note()
end

-- SIMULATE STUFF
function simulate_group()
  table.insert(group, {level = 10, hp = "195", hp_max = "235", mana = "240", mana_max = "300", moves = "150", moves_max = "150", tags = {"X", "L", "T"}, name = "Alas"})
  table.insert(group, {level = 20, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"-"}, name = "TestPlayer"})
  table.insert(group, {level = 30, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"-", "?"}, name = "A liveoak 1"})
  table.insert(group, {level = 40, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"O"}, name = "A clay man 1"})
  table.insert(group, {level = 50, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "1700", tags = {"M"}, name = "An ornary woman 1"})
  table.insert(group, {level = 60, hp = "44000", hp_max = "50000", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"T", "-"}, name = "The coolest dude you know"})
  table.insert(group, {level = 70, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"-"}, name = "TestPlayer"})
  table.insert(group, {level = 90, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"-"}, name = "A liveoak 2"})
  table.insert(group, {level = 90, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"O"}, name = "A clay man 2"})
  table.insert(group, {level = 100, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "1700", tags = {"M"}, name = "An ornary woman 2"})
  table.insert(group, {level = 100, hp = "44000", hp_max = "50000", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"M", "T", "-"}, name = "The coolest dude you know"})

  end_group()
end
-- END SIMULATE STUFF

DoAfterSpecial(.2, "loaded()", 12)
]]>
</script>

</muclient>
