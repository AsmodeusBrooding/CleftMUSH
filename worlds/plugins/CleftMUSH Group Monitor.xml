<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Sunday, July 03 2019 .06-pre -->

<!-- Plugin "CleftMUSH_Group_Window" generated by Plugin Wizard -->

<muclient>
<plugin
   name="CleftMUSH_Group_Window"
   author="Asmodeus, Elisius"
   id="353de94ba6c42060d839e256"
   language="Lua"
   purpose="Group monitor"
   date_written="2019-07-03 12:04:56"
   requires="5.00"
   version="6.57"
   >

</plugin>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   regexp="y"
   match="^(?P<leader>\w+)'s group:$"
   keep_evaluating="y"
   script="start_group"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  >
 </trigger>
  <trigger
   enabled="y"
   regexp="y"
   name="leadertrig"
   match="^(?P<leader>\w+)'s group:$"
   script="istheleader"
   keep_evaluating="y"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  >
 </trigger>
  <trigger
   enabled="y"
   regexp="y"
   name="my_name"
   match="^\[NAME: (?P<name>\w+)\]$"
   script="my_name"
   keep_evaluating="y"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  >
 </trigger>
  <trigger
   group="group"
   name="player_line"
   enabled="n"
   regexp="y"
   keep_evaluating="y"
   match="^\[(\s+|)(?<level>\d+)\s+(?<tags>[^\s]+)\]\s+(?<name>(\[\w+\]\s+\w+.*\w+|\(\w+\)\s+\w+.*\w+|\w+.*\w+))\s+(?<hp>\d+)\/(\s+|)(?<hp_max>\d+)\s+hp\s+(?<mana>(-\d+|\d+|\?))\/(\s+|)(?<mana_max>(-\d+|\d+|\?))\s+mana\s+(?<moves>(-\d+|\d+|\?))\/(\s+|)(?<moves_max>\d+)\s+mv\s+(?<exp>\d+)\s+xp$"
   script="player_line"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   regexp="y"
   match="^Enemy group:$"
   keep_evaluating="y"
   script="start_enemy_group"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="enemy_group"
   enabled="n"
   regexp="y"
   keep_evaluating="y"
   match="^\[(\s+|)(?<level>\d+)\s+(?<tags>[^\s]+)\]\s+(?<name>\w+.*\w+)\s+(?<hp>\d+)\/(\s+|)(?<hp_max>\d+)\s+hp\s+(?<mana>(-\d+|\d+|\?))\/(\s+|)(?<mana_max>(-\d+|\d+|\?))\s+mana\s+(?<moves>(-\d+|\d+|\?))\/(\s+|)(?<moves_max>\d+)\s+mv\s+(?<exp>\d+)\s+xp$"
   script="enemy_line"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   regexp="y"
   match="^\[G_End\]$"
   script="end_group"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   match="| HP:*/* | MP:*/* | MV:*/* | Enemy:None | TNL:* | SUPER: * | "
   keep_evaluating="y"
   regexp="n"
   send_to="14"
   sequence="100"
  >
  <send>
    enemy_group = nil
    window(true)
  </send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
<alias
	sequence="100"
	match="group help"
	enabled="y"
	send_to="12"
	ignore_case="y"><send>grouphelp()
</send></alias>
  <alias
   regexp="y"
   match="^group$"
   enabled="y"
   sequence="100"
   script="toggle"
  >
  </alias>
  <alias
   regexp="y"
   match="^group minions$"
   enabled="y"
   sequence="100"
   script="toggle_minions"
  >
  </alias>
  <alias
   regexp="y"
   match="^fake group$"
   enabled="y"
   sequence="100"
   script="simulate_group"
  >
  </alias>
  <alias
   regexp="y"
   match="^group debug$"
   enabled="y"
   sequence="100"
   script="ToggleDebug"
   >
  </alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[
      require "movewindow"
      require "gauge"
      require "mw"
      require "mw_theme_base"
      require "tprint"
	    require "utility"
      require "colors"
  	  dofile(GetPluginInfo(GetPluginID(), 20) .. "cleft_colors.lua")

      local group = {}

      local version = "6.57"
      local to_bool = {["0"] = false, ["1"] = true}

      local winid = "win_"..GetPluginID()
      local myname = GetVariable("myname") or "" -- my name
      local group_leader = "" -- group leader
      local group_name = "" -- group name
      local show_minions = to_bool[GetVariable("show_minions") or "1"] -- show minions
      local bg_color = "#000000"
      local level_color = "#FF00FF"
      local enemy_background_color = "#FF0000"
      local title_bg_color = "#303030"
      local border_color = "#303030"
      local player_border_color = "#AAAAAA"
      local enemy_border_color = "#FF0000"
      local title_color = "#FFFFFF" -- window title color
      local player_color = "#CCCCCC" -- player name color
      local leader_color = "#66ff33" -- leader tag color
      local tank_color = "#ff3300" -- tank tag color
      local minion_color = "#009999" -- minion tag color
      local no_melee_color = "#cc00cc" -- no melee tag color
      local pet_color = "#ffd700" -- pet mob color
      local you_color = "#0066dd" -- you color
	  local team_color = "#00FFFF" -- you color
      local hp_label_color = "#00ff00" -- hp label color
      local enemy_hp_label_color = "#00ff00" -- enemy hp label color
      local mana_label_color = "#3333ff" -- mana label color
      local moves_label_color = "#ffff66" -- moves label color
      --hp_label_color, mana_label_color, moves_label_color = "#DDDDDD", "#DDDDDD", "#DDDDDD"
      local overlay_color = "#FFFFFF" -- % overlay color
      local biggest_number = 1 -- biggest number for hp/mana/moves, to set player box size
      local overlay_pct = to_bool[GetVariable("overlay_pct") or "1"] -- show % overlay
      local show_numbers = to_bool[GetVariable("show_numbers") or "1"] -- show numbers after gauge
      local show_mana = to_bool[GetVariable("show_mana") or "1"] -- show mana
      local show_moves = to_bool[GetVariable("show_moves") or "1"] -- show moves
      local last_refresh = 1 -- last window refresh
      local pos_x = GetVariable("pos_x") or 100
      local pos_y = GetVariable("pos_y") or 100
      local font_size = GetVariable("font_size") or 12
      local font_name = "Fixedsys Excelsior 3.01" or "Fixedsys"
      local window_visible = true -- always start out with visible window
      local title = "Group Info: Use LOOK to draw the bars, or if this is your first time using the window type setup prompt"
      local bar_height = font_size+4 -- height of bars
      local bar_width = tonumber(GetVariable("bar_width")) or 200 -- width of bars
      local bar_ticks = 9 -- number of ticks to show on bar
      local hp_bar_border = GetVariable("hp_bar_border") or "#777777" -- bar surrounding the gauges
      local enemy_hp_bar_border = GetVariable("hp_bar_border") or "#777777" -- bar surrounding the gauges
      local mana_bar_border = GetVariable("mana_bar_border_color") or "#777777" -- bar surrounding the gauges
      local moves_bar_border = GetVariable("moves_bar_border_color") or "#777777" -- bar surrounding the gauges
      local enemy_hp_color = GetVariable("enemy_hp_color") or "#00ff00" -- color of bar
      local hp_color = GetVariable("hp_color") or "#00ff00" -- color of bar
      local mana_color = GetVariable("mana_color") or "#3333ff" -- color of bar
      local moves_color = GetVariable("moves_color") or "#ffff66" -- color of bar
      local win_height = GetVariable("win_height") or 400
      local win_width = GetVariable("win_width") or 440
      local top = GetVariable("top") or 20
      local grip_resize = 10 -- resize grip size
      local debug_state = false
      local compact_mode = to_bool[GetVariable("compact_mode") or 0]
      GAP = 4
      --allows for gauges changing color at certain thresholds
      thresh1active = tonumber (GetVariable("thresh1active")) or 0
      thresh2active = tonumber (GetVariable("thresh2active")) or 0
      thresh1percent = tonumber (GetVariable("thresh1percent")) or 40
      thresh2percent = tonumber (GetVariable("thresh2percent")) or 20
      thresh1color = GetVariable("thresh1color") or "#00ffff"
      thresh2color = GetVariable("thresh2color") or "#0000ff"

      function ToggleDebug()
	 if debug_state ~= true then
	 debug_state = true
	 else
	 debug_state = false
	 end
	 NotifyNote("Debug is now " .. tostring(debug_state))
	 SetVariable("debug_state", "debug_state")
	 SaveState()
      end

      function NotifyNote(message)
	 ColourNote ("Green", "", message)
      end

      function ErrorNote(message)
	 ColourNote ("Red", "", message)
      end

      function DebugNote(message)
	 if(debug_state) then
	    Note(message)
	 end
      end

      function toggle()
	 window_visible = not window_visible
	 if not window_visible then -- remove window
	    WindowDelete(winid)
	 else
	    window(true)
	 end
      end

      function toggle_minions()
	 show_minions = not show_minions
	 window(false)
      end

      function start_group()
	 EnableTriggerGroup("group", true)
	 group = {}
      end

      function start_enemy_group()
	 EnableTriggerGroup("group", false)
	 EnableTriggerGroup("enemy_group", true)
	 enemy_group = {}
      end

      function player_line(name, line, args)
	 tmp_tags = split(args.name, args.tags)
	 -- Insert YOU tag
	 if(args.name == myname) then
	    table.insert(tmp_tags, "You")
	 end
	 table.insert(group, {hp = args.hp, hp_max = args.hp_max, mana = args.mana, mana_max = args.mana_max, moves = args.moves, moves_max = args.moves_max, tags = tmp_tags, name = args.name, level = args.level})
      end

      function enemy_line(name, line, args)
	 --tprint(args)
	 table.insert(enemy_group, {hp = args.hp, hp_max = args.hp_max, mana = args.mana, mana_max = args.mana_max, moves = args.moves, moves_max = args.moves_max, tags = tmp_tags, name = args.name, level = args.level})
      end

      function my_name(name, line, args)
	 myname = args.name
	 SaveState()
      end

      function prompt_line(name, line, args)
	 if myname == "" then -- my name isnt set so dont try to update group stats
	    NotifyNote("My name is not set yet. Going to toggle ctriggers. This probably only happens when re-installing the group plugin.")
	    SendNoEcho("pbust Playername: %n")
	    --SendNoEcho("set ctrigger on")
	    return
	 end
	 for i, player in ipairs(group) do
	    if string.lower(player.name) == string.lower(myname) then
	       player.hp = args.hp
	       player.hp_max = args.hp_max
	       player.mana = args.mana
	       player.mana_max = args.mana_max
	       player.moves = args.moves
	       player.moves_max = args.moves_max
	       player.level = args.level
	       window(false)
	       return
	    end
	 end
	 for i, player in ipairs(enemy_group) do
	    if string.lower(player.name) == string.lower(myname) then
	       player.hp = args.hp
	       player.hp_max = args.hp_max
	       player.mana = args.mana
	       player.mana_max = args.mana_max
	       player.moves = args.moves
	       player.moves_max = args.moves_max
	       player.level = args.level
	       window(false)
	       return
	    end
	 end
      end

      function end_group()
	 EnableTriggerGroup("enemy_group", false)
	 set_order() -- flag as minion, pet, player
	 get_biggest_number() -- get longest hp/mana/moves number to format box size
	 table.sort(group, by_player)
	 window(true)
      end

      function get_biggest_number()
	 for i, player in ipairs(group) do
	    if (not show_minions and player.minion < 1) or show_minions then
	       if #player.hp_max > biggest_number then
		  biggest_number = #player.hp_max
	       end
	       if #player.mana_max > biggest_number then
		  biggest_number = #player.mana_max
	       end
	       if #player.moves_max > biggest_number then
		  biggest_number = #player.moves_max
	       end
	    end
	 end
      end

      function split(n, t)
	 local tags = {}
	 for i = 1, #t do
	    local tag = string.sub(t, i)
	    table.insert(tags, tag)
	 end
	 return tags
      end


      function is_minion(tags)
	 for i, tag in ipairs(tags) do
	    if tag == "Mob" then
	       return true
	    end
	 end
	 return false
      end

      function is_pet(tags)
	 for i, tag in ipairs(tags) do
	    if tag == "Pet" then
	       return true
	    end
	 end
	 return false
      end

      function is_you(tags)
	 for i, tag in ipairs(tags) do
	    if tag == "You" then
	       return true
	    end
	 end
	 return false
      end


      function is_no_melee(tags)
	 for i, tag in ipairs(tags) do
	    if tag == "N" then
	       return true
	    end
	 end
	 return false
      end

      function istheleader(name, line, wildcards)
	 group_leader = wildcards.leader
      end

      function is_tank(tags)
	 for i, tag in ipairs(tags) do
	    if tag == "T" then
	       return true
	    end
	 end
	 return false
      end


      function set_order()
	 for i, player in ipairs(group) do
	    if is_minion(player.tags) then
	       player.minion = 3
	    elseif is_pet(player.tags) then
	       player.minion = 2
	    elseif is_you(player.tags) then
	       player.minion = 1
	    else
	       player.minion = 0
	    end
	 end
      end

      function by_player(a, b)
	 return a.minion < b.minion
      end

      function window(redraw)
	 if not window_visible then
	    return
	 end

	 if redraw then
	    WindowDelete("winid")
	    WindowCreate(winid, pos_x, pos_y, win_width, win_height, 0, 0, ColourNameToRGB(bg_color))
	    WindowPosition(winid, pos_x, pos_y, 0, 2)
	    WindowSetZOrder(winid, 201)
	  --  WindowFont(winid, font_id, font_name, font_size, false, false, false, false)
    font_id = "font"
    labels_width = math.max(WindowTextWidth(winid, font_id, "HP"), WindowTextWidth(winid, font_id, "MN"), WindowTextWidth(winid, font_id, "MV"))
       WindowFont(winid, font_id, font_name, font_size, false, false, false, false, 0) -- normal font
    --- Grab font size settings.
    line_height = WindowFontInfo (winid, font_id, 1) -  WindowFontInfo (winid, font_id, 4) + 2
    title_height = line_height*2+4
  --     WindowFont(win, font_id, font_name, font_size, false, false, false, false, 0) -- normal font
	    WindowFont(winid, "b1", font_name, font_size, true, false, false, false)
	    WindowFont(winid, "s1", font_name, font_size - 1, false, false, false, false)
	    movewindow.install(winid, 6, 2, true, nil, {mouseup=MouseUp, mousedown=MouseDown, dragmove=LeftClickOnly, dragrelease=LeftClickOnly})
	    -- register with the z-order monitor
	    CallPlugin("462b665ecb569efbf261422f", "registerMiniwindow", winid)
	    movewindow.add_drag_handler (winid, 0, 0, 0, win_height)
	    WindowAddHotspot(winid, "resize", win_width - grip_resize, win_height - grip_resize, win_width, win_height, "MouseOver", "CancelMouseOver", "MouseDown", "", "MouseUp", "", 6, 0)
	    WindowDragHandler(winid, "resize", "ResizeMoveCallback", "ResizeReleaseCallback", 0)
	 else
	    WindowResize(winid, win_width, win_height, ColourNameToRGB(bg_color))
	    WindowMoveHotspot(winid, "resize", win_width - grip_resize, win_height - grip_resize, win_width, win_height)
	 end
	 WindowShow(winid, true)
	 show_group()
      end

      function trim(str)
	 if str then
	    return (str:gsub("^%s*(.-)%s*$", "%1"))
	 else
	    return ""
	 end
      end

      function truncate(str)
	 if #str <= 12 then
	    return str
	 end
	 return trim(string.sub(str, 1, 10))..".."
      end

      function bigtruncate(str)
	 if #str <= 12 then
	    return str
	 end
	 if not compact_mode and show_numbers then
	 return trim(string.sub(str, 1, 15))..".."
	 elseif not compact_mode and not show_numbers then
	 return trim(string.sub(str, 1, 15))..".."
	 elseif compact_mode and show_numbers then
	 return trim(string.sub(str, 1, 17))..".."
	 elseif compact_mode and not show_numbers then
	 return trim(string.sub(str, 1, 7))..".."
      end
	  end


      function abbreviate(str,length)
	 if length == nil then
	 --if tonumber(font_size) <= 12 then
	    length=22
		--elseif tonumber(font_size) > 12 and tonumber(font_size) < 20 then
		--length = 20 -- font_size/3 + 3
		--elseif tonumber(font_size) >= 20 then
		--length = 20 -- font_size/2.5
		end
		if not show_numbers and compact_mode then
		length = 8
  elseif not show_numbers and not compact_mode then
    length = 15
  elseif show_numbers and compact_mode then
  length = 18
elseif show_numbers and not compact_mode then
  length = 22
	--	end
	 end
	 if string.len(str)>length then
	    return string.sub(str, 1, length)..".."
	 else
	    return str
	 end
      end
      function nonumberabbreviate(str,length)
	 if length == nil then
	    length=17
	 end
	 if string.len(str)>length then
	    return string.sub(str, 1, length)..".."
	 else
	    return str
	 end
      end

      function limit_n(num) --function nlim(num) --Yeah, I keep shortening things
	 n=tonumber(num) --Try to coerce into numeric

	 if n == nil then --we have a non numeric value
	    --print(string.format('"%s" was not converted to a number', tostring(num)))
	    return string.sub(tostring(num), 1, 5) -- so just return the first 5 characters of the string
	 else --numeric
	    usn=math.abs(n)    --So get absolute value for scale testing
	    --print(string.format("abs(%.2f)=%.2f"),n,usn)
	 end
	 --Now test the absolute value for scale
	 if usn < 10^4 then
	    return tostring(n)
    elseif usn < 10^5 then
       return string.format("%.0fk", n / 10^3)
	 elseif usn < 10^6 then
	    return string.format("%.0fk", n / 10^3)
	 elseif usn < 10^9 then
	    return string.format("%.0fm", n / 10^6)
	 elseif usn < 10^12 then
	    return string.format("%.0fb", n / 10^9)
	 elseif usn < 10^15 then
	    return string.format("%.0ft", n / 10^12)
	 else
	    return string.format("%.0fq", n / 10^15)
	 end
      end


      function fixNaN(num)
  if num ~= num or num <= 0 then num = 0 end
  return num
end

      function drawPlayer(player, i, isPlayerOrEnemy)
	 if is_tank(player.tags) or (not show_minions and player.minion == 0) or show_minions then
	   local padding = 3
	   local box_top, box_right, box_bottom = top, 1, nil
	   across = across + 1 -- how many players fit across window
	   box_top = top + line_height - font_size + padding
	   top = font_size/3 + box_top or 17
	   local x = 0
     local column_width = 0
	 	 LevelPos = WindowTextWidth(winid, font_id, "[100] ")
		 NamePos = WindowTextWidth(winid, font_id, abbreviate(player.name).." ")
     if NamePos <= 80 then
       NamePos = 144
     end
		 TagNamePos = WindowTextWidth(winid, font_id, "[Leader] ")
	   no_num_bar_width_100_x = bar_width + WindowTextWidth(winid, font_id, "**", false)
     --if column_width == 0 then
     Level100Width = WindowTextWidth(winid, font_id, " ")
     LeaderTagSize = WindowTextWidth(winid, font_id, "[LEADER] ")
     column_width = math.max(column_width, WindowTextWidth(winid, font_id, "[]                   "..NamePos..LeaderTagSize))
     bar_width = column_width - GAP*3 - labels_width
     if compact_mode == true then
       bar_width = bar_width/2
     else
       bar_width = column_width - GAP*3 - labels_width
     end
        local hpPercent = 100
        if player.hp and player.hp_max then
           hpPercent = math.floor(player.hp / player.hp_max * 100)
        end
      local hp_color = "#00ff00" -- color of bar
      local hp_bar_border = "#777777" -- bar surrounding the gauges
      local thresh1color = GetVariable("thresh1color") or "#00ffff"
      local thresh2color = GetVariable("thresh2color") or "#0000ff"
        if thresh1active == 1 then
           if hpPercent < thresh1percent then
              hp_color = thresh1color
              hp_bar_border = thresh1color
           end
        end
        if thresh2active == 1 then
           if hpPercent < thresh2percent then
             hp_color = thresh2color
             hp_bar_border = thresh2color
           end
         end
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- DRAW TEXT FOR SMALL/LARGE BARS --------------------------------------
	    if isPlayerOrEnemy or not isPlayerOrEnemy then
	       if compact_mode then
		  --Thing 1
		  -- Draw player
		  x = x + WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
		--  x = x + WindowText(winid, font_id, truncate(player.name), left + 22, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 6 -- player name truncated
		  WindowAddHotspot(winid, "player"..i, left + 18, top + 2, left + 100, top + 16, "", "", "", "", "", player.name, 0, 0) -- show title for truncated player

		  if show_numbers then
		     x = x + WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
		     x = x + WindowText(winid, font_id, abbreviate(player.name), left + labels_width + Level100Width, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 6 -- player name truncated
		  end
      if not show_numbers then
		     x = WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
		     x = x + WindowText(winid, font_id, abbreviate(player.name), left + labels_width + Level100Width, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 6 -- player name truncated
		  end
    end


		  if is_no_melee(player.tags) then
		     x = x + WindowText(winid, font_id, "N", x, top + padding, 0, 0, ColourNameToRGB(no_melee_color), false) + 2 -- show if no melee
		  end
     if not compact_mode then
		  x = x + WindowText(winid, font_id, "Lv["..player.level.."]", left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
		  x = x + WindowText(winid, font_id, abbreviate(player.name), left + LevelPos + font_size*1.7, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8-- player name truncated

		  if is_no_melee(player.tags) then
		     x = x + WindowText(winid, font_id, "[N]", x, top + padding, 0, 0, ColourNameToRGB(no_melee_color), false) -- show if no melee
		  end
	       end
       --end
	    --else -- isPlayerOrEnemy
	    end -- if isPlayerOrEnemy
	    ---- END DRAW TEXT FOR SMALL/LARGE BARS ----------------------------------
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- YOU -----------------------------------------------------------------
	    if is_you(player.tags) and not (group_leader == player.name) and not is_minion(player.tags) and isPlayerOrEnemy then
	       if compact_mode then
           if show_numbers then
		     x = x + WindowText(winid, font_id, "Y", left+column_width - labels_width*2, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if you
		--  else
		--     x = x + WindowText(winid, font_id, "Y", no_num_bar_width_100_x + padding*2, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if you
		  end
	       end
		   if compact_mode and not show_numbers then
		     x = x + WindowText(winid, font_id, "Y", left + bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if minion
		   end
	       if not compact_mode then
		  if show_numbers then
		  YouTagSize = WindowTextWidth(winid, font_id, " [YOU]")
		     x = x + WindowText(winid, font_id, "[YOU]", bar_width+left+YouTagSize, top + padding, 0, 0, ColourNameToRGB(you_color), false) -- show if you
		  else
		     x = x + WindowText(winid, font_id, "Y", left+bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if you
		  end
	       end
	    end
	    ---- END YOU -------------------------------------------------------------
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- TEAM-MATE -----------------------------------------------------------------
	    if not is_you(player.tags) and not (group_leader == player.name) and not is_minion(player.tags) and not is_pet(player.tags) and isPlayerOrEnemy  then
	       if compact_mode then
           if show_numbers then
		     x = x + WindowText(winid, font_id, "T", left+column_width - labels_width*2, top + padding, 0, 0, ColourNameToRGB(team_color), false) + 2 -- show if you
		--  else
		--     x = x + WindowText(winid, font_id, "Y", no_num_bar_width_100_x + padding*2, top + padding, 0, 0, ColourNameToRGB(you_color), false) + 2 -- show if you
		  end
	       end
		   if compact_mode and not show_numbers then
		     x = x + WindowText(winid, font_id, "T",  left + bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(team_color), false) + 2 -- show if minion
		   end
	       if not compact_mode then
		  if show_numbers then
		  TeamTagSize = WindowTextWidth(winid, font_id, "[TEAM]")
		     x = x + WindowText(winid, font_id, "[TEAM]", bar_width+left+TeamTagSize, top + padding, 0, 0, ColourNameToRGB(team_color), false) -- show if you
		  else
		     x = x + WindowText(winid, font_id, "T", left+bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(team_color), false) + 2 -- show if you
		  end
	       end
	    end
	    ---- END TEAM-MATE -------------------------------------------------------------
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- LEADER --------------------------------------------------------------
	    if group_leader == player.name then
		  if compact_mode then
		     if show_numbers then
			x = x + WindowText(winid, font_id, "L", left+column_width - labels_width*2, top + padding, 0, 0, ColourNameToRGB(leader_color, false) + 2)
		  --   else
		  --x = x + WindowText(winid, font_id, "L", left + no_num_bar_width_100_x - 1, top + padding, 0, 0, ColourNameToRGB(leader_color), false) + 2
		     end
		  end
		  if compact_mode and not show_numbers then
		    x = x + WindowText(winid, font_id, "L", left + bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(leader_color), false) + 2 -- show if minion
			 end

		  if not compact_mode then
		     if show_numbers then
			x = x + WindowText(winid, font_id, "[LEADER]", bar_width+left+LevelPos-font_size*2.5, top + padding, 0, 0, ColourNameToRGB(leader_color), false) -- show if leader -- used to be left+240
		     else
			x = x + WindowText(winid, font_id, "L", left + bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(leader_color), false) + 2 -- show if leader
		     end
		  end
	    end
	    ---- END LEADER ----------------------------------------------------------
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- PETS ----------------------------------------------------------------
	    if is_pet(player.tags) and isPlayerOrEnemy then
        DebugNote(x)
	       if compact_mode then
		  if show_numbers then
		     x = x + WindowText(winid, font_id, "P", left+column_width - labels_width*2, top + padding, 0, 0, ColourNameToRGB(pet_color), false) + 2 -- show if pet
		 -- else
		 --   x = x + WindowText(winid, font_id, "P", left + bar_width - 1, top + padding, 0, 0, ColourNameToRGB(pet_color), false) + 2 -- show if pet
		  end
	       end
		   		   if compact_mode and not show_numbers then
		   		     x = x + WindowText(winid, font_id, "P", left + bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(pet_color), false) + 2 -- show if minion
					 end

	       if not compact_mode then
		  if show_numbers then
		    PetTagSize = WindowTextWidth(winid, font_id, "  [PET]")
		     x = x + WindowText(winid, font_id, "[PET]", bar_width+left+PetTagSize, top + padding, 0, 0, ColourNameToRGB(pet_color), false) -- show if pet
			 --print("Bar_width: ",bar_width)
		  else
		     x = x + WindowText(winid, font_id, "P", left+bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(pet_color), false) + 2 -- show if pet
		  end
	       end
	    end
	    ---- END PETS ------------------------------------------------------------
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- MINIONS -------------------------------------------------------------
      if is_minion(player.tags) and isPlayerOrEnemy then
	       if compact_mode then
		  if show_numbers then
		     x = x + WindowText(winid, font_id, "C", left+column_width - labels_width*2, top + padding, 0, 0, ColourNameToRGB(minion_color), false) + 2 -- show if minion
		 -- else
		   --  x = x + WindowText(winid, font_id, "C", x + padding - 1, top + padding, 0, 0, ColourNameToRGB(minion_color), false) + 2 -- show if minion
		  end
	       end
		   if compact_mode and not show_numbers then
		   		     x = x + WindowText(winid, font_id, "C", left + bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(minion_color), false) + 2 -- show if minion
					 end

	       if not compact_mode then
		  if show_numbers then
		  --CharmTagSize = WindowTextWidth(winid, font_id, "[CHARM]")
		     x = x + WindowText(winid, font_id, "[CHARM]", bar_width+left+LevelPos-font_size, top + padding, 0, 0, ColourNameToRGB(minion_color), false)  -- show if minion
		  else
		     x = x + WindowText(winid, font_id, "C", left + bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(minion_color), false) + 2 -- show if minion
		  end
	       end
	    end
	    ---- END MINIONS ---------------------------------------------------------

	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- ENEMIES -------------------------------------------------------------
	    if not isPlayerOrEnemy then
	       if compact_mode then
		  if show_numbers then
		     x = x + WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
		     x = x + WindowText(winid, font_id, abbreviate(player.name), left + labels_width, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8 -- player name
		     x = WindowText(winid, font_id, "E", left+column_width - labels_width*2, top + padding, 0, 0, ColourNameToRGB(tank_color), false) -- show if enemy
		  end
		  end
		  if compact_mode and not show_numbers then
		     x = x + WindowText(winid, font_id, player.level, left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
		     x = x + WindowText(winid, font_id, abbreviate(player.name), left + labels_width, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8 -- player name
		   	 x = x + WindowText(winid, font_id, "E", left + bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(tank_color), false) + 2 -- show if minion
		  end
		   if not compact_mode and show_numbers then
--		  print("Player Name: ", player.name)
--		  print("Player Level: ", player.level)
		     --x = WindowRectOp(winid, 2, left - 3, top, 307, 198, ColourNameToRGB(enemy_background_color))
			 EnemyTagSize = WindowTextWidth(winid, font_id, "[ENEMY]")
		     x = WindowText(winid, font_id, "Lv["..player.level.."]", left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
		     x = x + WindowText(winid, font_id, abbreviate(player.name), left + LevelPos + font_size*1.7, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8 -- player name
		     x = WindowText(winid, font_id, "[ENEMY]", bar_width+left+EnemyTagSize-font_size*2.5, top + padding, 0, 0, ColourNameToRGB(tank_color), false) -- show if enemy
       end
       if not compact_mode and not show_numbers then
		     x = WindowText(winid, font_id, "Lv["..player.level.."]", left, top + padding, 0, 0, ColourNameToRGB(level_color), false) + left -- label and padding
		     x = x + WindowText(winid, font_id, abbreviate(player.name), left + LevelPos + font_size*1.7, top + padding, 0, 0, ColourNameToRGB(player_color), false) + left + 18 + 8-- player name
		     x = x + WindowText(winid, font_id, "E", left + bar_width+font_size, top + padding, 0, 0, ColourNameToRGB(tank_color), false) + 2 -- show if minion
	       end
	    end
	    ---- END ENEMIES ---------------------------------------------------------
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

	    -- Magic
      top = top + line_height + 1
      x = x + labels_width + GAP

	    --top = top + bar_height + font_size/2
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- DRAW BARS -----------------------------------------------------------
	    if isPlayerOrEnemy then
	       x = WindowText(winid, font_id, "HP", left, top, 0, 0, ColourNameToRGB(hp_label_color), false) + left -- label and padding
	       gauge(winid, "HP for "..player.name, tonumber(player.hp), tonumber(player.hp_max), x + padding, top, bar_width, line_height, ColourNameToRGB(hp_color), 0x000000, bar_ticks, ColourNameToRGB(hp_bar_border), ColourNameToRGB(hp_bar_border), nil, flat_gauges==1) -- hp gauge
	    elseif not isPlayerOrEnemy then
	       x = WindowText(winid, font_id, "HP", left, top, 0, 0, ColourNameToRGB(enemy_hp_label_color), false) + left -- label and padding
	       gauge(winid, "HP for "..player.name, tonumber(player.hp), tonumber(player.hp_max), x + padding, top, bar_width, line_height, ColourNameToRGB(enemy_hp_color), 0x000000, bar_ticks, ColourNameToRGB(enemy_hp_bar_border), ColourNameToRGB(enemy_hp_bar_border), nil, flat_gauges==1) -- hp gauge
	    end
	    if overlay_pct then
	       outlined_text(winid, "s1", math.floor(player.hp / player.hp_max * 100).."%", x + 6, top - font_size/20, 0, 0, ColourNameToRGB(overlay_color), false) -- hp %
		 --  print("HP TOP: ", top)
		 --  print("FONT_SIZE: ", font_size)
	    end
	    if show_numbers then
	       box_right = x + bar_width + WindowTextWidth(winid, "b1", string.rep("X", biggest_number).."/"..string.rep("X", biggest_number)) + font_size+GAP -- set max size of hp/mana/moves on side of gauge
	       WindowText(winid, font_id, limit_n(player.hp).."/"..limit_n(player.hp_max), x + 6 + bar_width, top, 0, 0, ColourNameToRGB(overlay_color), false) -- hp
	    else
	       box_right = x + bar_width + 6
	    end
      top = top + line_height + 1
	    --top = top + bar_height + 2

	    if show_mana then
	       x = WindowText(winid, font_id, "MN", left, top, 0, 0, ColourNameToRGB(mana_label_color), false) + left -- label and padding
	       gauge(winid, "Mana for "..player.name, tonumber(player.mana), tonumber(player.mana_max), x + padding, top, bar_width, line_height, ColourNameToRGB(mana_color), 0x000000, bar_ticks, ColourNameToRGB(mana_bar_border), ColourNameToRGB(mana_bar_border), nil, flat_gauges==1) -- mana gauge
	       local is_number = tonumber(player.mana) and tonumber(player.mana_max)
	       if (is_number and overlay_pct) then
		  outlined_text(winid, "s1", fixNaN(math.floor(player.mana / player.mana_max * 100)).."%", x + 6, top - font_size/20, 0, 0, ColourNameToRGB(overlay_color), false) -- mana %
		  		--   print("MANA TOP: ", top)
	       end
	       if show_numbers then
		  WindowText(winid, font_id, limit_n(player.mana).."/"..limit_n(player.mana_max), x + 6 + bar_width, top, 0, 0, ColourNameToRGB(overlay_color), false) -- mana
	       end
	      -- top = top + bar_height + 2
        top = top + line_height + 1

	       if show_moves then
		  x = WindowText(winid, font_id, "MV", left, top, 0, 0, ColourNameToRGB(moves_label_color), false) + left -- label and padding
		  gauge(winid, "Moves for "..player.name, tonumber(player.moves), tonumber(player.moves_max), x + padding, top, bar_width, line_height, ColourNameToRGB(moves_color), 0x000000, bar_ticks, ColourNameToRGB(moves_bar_border), ColourNameToRGB(moves_bar_border), nil, flat_gauges==1) -- moves gauge
		  if overlay_pct then
		     outlined_text(winid, "s1", math.floor(player.moves / player.moves_max * 100).."%", x + 6, top - font_size/20, 0, 0, ColourNameToRGB(overlay_color), false) -- moves %
			-- 		   print("MOVE TOP: ", top)
		  end
		  if show_numbers then
		     WindowText(winid, font_id, player.moves.."/"..player.moves_max, x + 6 + bar_width, top, 0, 0, ColourNameToRGB(overlay_color), false) -- moves
		  end
		 -- top = top + bar_height + 2
     top = top + line_height + 1
	       end
	    end
	    ---- END DRAW BARS -------------------------------------------------------
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- BORDER/MISC ---------------------------------------------------------
	    box_bottom = top + 1
	    if isPlayerOrEnemy then
	       WindowRectOp(winid, 1, left - 3, box_top, box_right, box_bottom, ColourNameToRGB(player_border_color)) -- player border
	    else
	       WindowRectOp(winid, 1, left - 3, box_top, box_right, box_bottom, ColourNameToRGB(enemy_border_color))
	       --WindowRectOp(winid, 2, left - 3, box_top, box_right, box_bottom, ColourNameToRGB(enemy_background_color))
	    end
	    ---- END BORDER/MISC -----------------------------------------------------
	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>

	    ---- <><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><>
	    ---- Row Calculations ----------------------------------------------------
	    if win_width - box_right - (box_right - left + 5) > 0 then -- keep drawing across
	       left = left + (box_right - left) + 4
	       top = font_size * 1.1 + 2 + (rows * (box_bottom - box_top + 2))
	    else -- start new row
	       rows = rows + 1
	       across = 0
	       left = 7
	       top = font_size * 1.1 + 2 +(rows * (box_bottom - box_top + 2))
	    end
	    ---- END Row Calculations ------------------------------------------------
	    ---- <><><><><><><><><>><><><><><><><><><><><><><><><><><><><><><><><><><>
	 end
      end

      function show_group()
	 WindowRectOp(winid, 2, 2, 1, -2, -2, ColourNameToRGB(bg_color)) -- blank canvas
	 --WindowRectOp(winid, 2, 0, 0, 0, 22, ColourNameToRGB(title_bg_color)) -- title background
	 --WindowRectOp(winid, 1, 0, 0, 0, 0, ColourNameToRGB(border_color)) -- border
	 --Theme.Draw3DRect(winid, 0, 0, 0, 0, depressed) -- themed window

	 title = "Group Info: Use LOOK to draw the bars, or if this is your first time using the window type setup prompt" -- default title
	 if group_leader ~= "" then -- group leader
	    title = "Group Leader: "..group_leader
	 end
	 Theme.DrawTitleBar(winid, font_id, title, "center") -- them window title (has to be drawn before border) This is the title bar that says the leader name
	 Theme.DrawBorder(winid) -- theme window border

	 left, top = 7, font_size * 1.1 + 2-- bar location
	 across = 0
	 rows = 0
	 -- [L][M][O][N][TANK]  green, dark cyan, white, magenta, red
	 -- Find YOU in group list and put YOU first.
	 for k, v in pairs(group) do
	    if (v.name == myname) then
	       group[k], group[1] = group[1], group[k]
	    end
	 end

	 for i, player in ipairs(group) do
	    drawPlayer(player, i, true)
	 end

	 if enemy_group then
	    for i,player in ipairs(enemy_group) do
	       drawPlayer(player, i, false)
	    end
	 end
	 Theme.AddResizeTag(winid, 2, nil, nil, "MouseDown", "ResizeMoveCallback", "ResizeReleaseCallback") -- resize grip
      end -- DrawPlayer

      function ResizeMoveCallback()
	 local x_offset, y_offset = start_x - WindowInfo(winid, 17), start_y - WindowInfo(winid, 18)
	 start_x, start_y = WindowInfo(winid, 17), WindowInfo(winid, 18)
	 win_width = win_width - x_offset
	 win_height = win_height - y_offset
	 if os.clock() - last_refresh >= .05 then
	    last_refresh = os.clock()
	    window(false)
	 end
      end

      function ResizeReleaseCallback()
	 window(true)
	 SaveState()
      end

      function MouseDown(flags, id)
	 if id == "resize" then
	    start_x, start_y = WindowInfo(winid, 17), WindowInfo(winid, 18)
	 end
      end

      function MouseUp(flags, id, win)
	 if bit.band(flags, 0x20) ~= 0 then -- right click
	    right_click_menu()
	 end
	 pos_x, pos_y = WindowInfo(winid, 10), WindowInfo(winid, 11)
	 SaveState()
      end

      function right_click_menu()
	 local x, y = WindowInfo(winid, 14), WindowInfo(winid, 15)

	 local str = "!"

	 if show_minions then
	    str = str.."Hide Minions"
	 else
	    str = str.."Show Minions"
	 end

	 if show_mana then
	    str = str.."|-|Hide Mana"
	 else
	    str = str.."|-|Show Mana"
	 end

	 if show_moves then
	    str = str.."|Hide Moves"
	 else
	    str = str.."|Show Moves"
	 end

	 if compact_mode == false then
	    str = str.."|-|Compact Bars"
	 else
	    str = str.."|-|Full Size Bars"
	 end

	 str = str.."|-|>Colors|HP|Enemy HP|Mana|Moves|<"

	 if overlay_pct then
	    str = str.."|-|Hide % Overlay"
	 else
	    str = str.."|-|Show % Overlay"
	 end

	 if show_numbers then
	    str = str.."|-|Hide Totals"
	 else
	    str = str.."|-|Show Totals"
	 end

	 str = str.."|-|Bring to Front"

	 str = str.."|-|Send to Back"

	 str = str.."|-|Change Font"

   str = str .."|-|>HP Thresholds|>First|"..(((thresh1active == 1) and "+") or "").."Activate|Set Percent ("..thresh1percent.."%)|Set Color ("..(thresh1color)..")|<|>Second|"..(((thresh2active == 1) and "+") or "").."Activate|Set Percent ("..thresh2percent.."%)|Set Color ("..(thresh2color)..")|<|<|"

	 opt = WindowMenu(winid, x, y, str)

	 if opt == "" then
	    return
	 end

	 opt = tonumber(opt)

	 if opt == 1 then -- toggle minions
	    show_minions = not show_minions
	    SaveState()
	 elseif opt == 2 then -- toggle mana
	    show_mana = not show_mana
	    SaveState()
	 elseif opt == 3 then -- toggle moves
	    show_moves = not show_moves
	    SaveState()
	 elseif opt == 4 then -- 1/2 width bars
	    if compact_mode == false then
        compact_mode = true
	    else
        compact_mode = false
	    end
	    SaveState()
	 elseif opt == 5 then -- hp color
	    local clr = PickColour(ColourNameToRGB(hp_color))
	    if clr ~= -1 then
	       hp_color = RGBColourToName(clr)
	       SaveState()
	    end
	 elseif opt == 6 then -- enemy hp color
	    local clr = PickColour(ColourNameToRGB(enemy_hp_color))
	    if clr ~= -1 then
	       enemy_hp_color = RGBColourToName(clr)
	       SaveState()
	    end
	 elseif opt == 7 then -- mana color
	    local clr = PickColour(ColourNameToRGB(mana_color))
	    if clr ~= -1 then
	       mana_color = RGBColourToName(clr)
	       SaveState()
	    end
	 elseif opt == 8 then -- moves color
	    local clr = PickColour(ColourNameToRGB(moves_color))
	    if clr ~= -1 then
	       moves_color = RGBColourToName(clr)
	       SaveState()
	    end
	 elseif opt == 9 then -- overlay %
	    overlay_pct = not overlay_pct
	    SaveState()
	 elseif opt == 10 then -- number totals after bar
	    show_numbers = not show_numbers
	    SaveState()
	 elseif opt == 11 then -- Bring to Front
	    CallPlugin("462b665ecb569efbf261422f","boostMe", winid)
	    --  print("Bring to Front")
	    SaveState()
	 elseif opt == 12 then -- Send to back
	    CallPlugin("462b665ecb569efbf261422f","dropMe", winid)
	    --  print("Sent to Back")
	    SaveState()
	 elseif opt == 13 then -- Change Font
	  --  wanted_font = utils.fontpicker ("Fixedsys", font_size) --font dialog
	  wanted_font = utils.inputbox("Select Font Size", "Change the font size for default font", font_size)
	    if wanted_font then
	   --    print("Bar Height1: ", bar_height)
	   --    print("Top1: ", top)
	     font_name = "Fixedsys Excelsior 3.01" or "Fixedsys"
		   font_size = tonumber(wanted_font)
		   if font_size <= 8 then
		   util.print("{R[{WThe smallest font size you are allowed is {Y9{W. The most ideal font size is {G10{W, or {Y12{W. Setting the font size to {Y9{W.{R]")
		   font_size = 9
     elseif font_size >= 30 then
		   util.print("{x238The largest font size currently allowed is 30. If you want to surpass this number, ask Asmodeus to add something in for you.")
		   font_size = 30
		   end
	      -- font_size = wanted_font.size
	       SetVariable("font_size", font_size)
	       --  bar_height = font_size + 4
	       --top = top + bar_height * 2
	       --rows+1
	       --SetVariable("top", top)
	       --SetVariable("bar_height", bar_height)
	 --      print("Bar Height2: ", bar_height)
	 --      print("Top2: ", top)
   	 window(true)
	    end
    elseif opt == 14 then -- Change thresholds
               thresh1active = (((thresh1active == 0) and 1) or 0)
    elseif opt == 15 then -- Change thresholds
      local perc = utils.inputbox( "I want the HP bars to change color when they drop below this percent...\n(enter a whole number between 1 and 100)", "Group Monitor HP Threshold #1", thresh1percent, nil, nil, {validate=validate_percent})
      if perc then
         if string.sub(perc, -1) == "%" then
            perc = string.sub(perc, 1,-2)
         end
         thresh1percent = tonumber(perc)
      end
    elseif opt == 16 then -- Change thresholds
      local clr = PickColour(ColourNameToRGB(thresh1color))
  		if clr ~= -1 then
  			thresh1color = RGBColourToName(clr)
      end
    elseif opt == 17 then -- Change thresholds
         thresh2active = (((thresh2active == 0) and 1) or 0)
    elseif opt == 18 then -- Change thresholds
      local perc = utils.inputbox( "I want the HP bars to change color when they drop below this percent...\n(enter a whole number between 1 and 100)", "Group Monitor HP Threshold #2", thresh2percent, nil, nil, {validate=validate_percent})
      if perc then
         if string.sub(perc, -1) == "%" then
            perc = string.sub(perc, 1,-2)
         end
         thresh2percent = tonumber(perc)
      end
    elseif opt == 19 then -- Change thresholds
      local clr = PickColour(ColourNameToRGB(thresh2color))
  		if clr ~= -1 then
  			thresh2color = RGBColourToName(clr)
  			SaveState()
      end
    end
          SaveState()
	 window(true)
      end

      function CancelMouseOver(flags, id)
      end

      function CancelMouseDown(flags, id)
      end

      function OnPluginEnable()
	 window(true)
      end

      function OnPluginDisable()
	 WindowDelete(winid)
      end

      function OnPluginClose()
	 WindowDelete(winid)
      end

      function from_bool(v)
	 if v then
	    return 1
	 end
	 return 0
      end

      function OnPluginSaveState()
	 SetVariable("myname", myname)
	 SetVariable("pos_x", pos_x)
	 SetVariable("pos_y", pos_y)
	 SetVariable("font_name", font_name)
	 SetVariable("font_size", font_size)
	 SetVariable("win_width", win_width)
	 SetVariable("win_height", win_height)
	 SetVariable("show_minions", from_bool(show_minions)) -- show minions
	 SetVariable("show_mana", from_bool(show_mana)) -- show mana
	 SetVariable("show_moves", from_bool(show_moves)) -- show moves
	 SetVariable("overlay_pct", from_bool(overlay_pct)) -- show % overlay
	 SetVariable("show_numbers", from_bool(show_numbers)) -- show totals
   SetVariable("compact_mode", from_bool(compact_mode)) -- show minions
	 SetVariable("hp_color", hp_color) -- hp color
   SetVariable("hp_bar_border", hp_color) -- hp color
	 SetVariable("enemy_hp_color", enemy_hp_color) -- enemy hp color
	 SetVariable("mana_color", mana_color) -- mana color
	 SetVariable("moves_color", moves_color) -- moves color
	 SetVariable("bar_width", bar_width) -- bar width
	 SetVariable("top", top)
   SetVariable("thresh1active", thresh1active)
   SetVariable("thresh2active", thresh2active)
   SetVariable("thresh1percent", thresh1percent)
   SetVariable("thresh2percent", thresh2percent)
   SetVariable("thresh1color", thresh1color)
   SetVariable("thresh2color", thresh2color)
	 SetVariable("debug_state", tostring(debug_state))
      end

      function loaded()
      util.print("{W--------------------------------------------------------------------------------")
      util.print("{WPlugin Name  : {YC{yl{Ye{yf{Yt{RM{rU{RS{rH {x238Group Window Installed")
      util.print("{WAuthor       : {x238Asmodeus and Elisius")
      util.print("{WVersion      : {G" .. version)
      util.print("{W--------------------------------------------------------------------------------")
      end

	  function grouphelp()
      util.print("{W--------------------------------------------------------------------------------")
      util.print("{WPlugin Name  : {YC{yl{Ye{yf{Yt{RM{rU{RS{rH {x238Group Window")
      util.print("{WAuthor       : {x238Asmodeus and Elisius")
      util.print("{WVersion      : {G" .. version)
      util.print("{W--------------------------------------------------------------------------------")
      util.print("")
      util.print("                 {YC{yl{Ye{yf{Yt{RM{rU{RS{rH {x238Group Window {YHelp                            ")
      util.print("{W--------------------------------------------------------------------------------")
      util.print("")
      util.print("{Y group help                 {R-->{W Displays the help pages for the group window")
      util.print("{Y group debug                {R-->{W Displays the debug prints for developers")
      util.print("{Y group                      {R-->{W Hides or shows the group window")
      util.print("")
      util.print("{W--------------------------------------------------------------------------------")
      util.print("")
      util.print("")
end

function OnPluginInstall()
AddFont("FSEX300.ttf")
font_id = "font"
local font_name = "Fixedsys Excelsior 3.01" or "Fixedsys"
local font_size = GetVariable("font_size") or 12
labels_width = math.max(WindowTextWidth(winid, font_id, "HP"), WindowTextWidth(winid, font_id, "MN"), WindowTextWidth(winid, font_id, "MV"))
   WindowFont(winid, font_id, font_name, font_size, false, false, false, false, 0) -- normal font
--- Grab font size settings.
line_height = WindowFontInfo (winid, font_id, 1) -  WindowFontInfo (winid, font_id, 4) + 2
title_height = line_height*2+4
end



      -- SIMULATE STUFF
      function simulate_group()
	 table.insert(group, {level = 10, hp = "195", hp_max = "235", mana = "240", mana_max = "300", moves = "150", moves_max = "150", tags = {"X", "L", "T"}, name = "Alas"})
	 table.insert(group, {level = 20, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"-"}, name = "TestPlayer"})
	 table.insert(group, {level = 30, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"-", "?"}, name = "A liveoak 1"})
	 table.insert(group, {level = 40, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"O"}, name = "A clay man 1"})
	 table.insert(group, {level = 50, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "1700", tags = {"M"}, name = "An ornary woman 1"})
	 table.insert(group, {level = 60, hp = "44000", hp_max = "50000", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"T", "-"}, name = "The coolest dude you know"})
	 table.insert(group, {level = 70, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"-"}, name = "TestPlayer"})
	 table.insert(group, {level = 90, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"-"}, name = "A liveoak 2"})
	 table.insert(group, {level = 90, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"O"}, name = "A clay man 2"})
	 table.insert(group, {level = 100, hp = "140", hp_max = "275", mana = "150", mana_max = "250", moves = "160", moves_max = "1700", tags = {"M"}, name = "An ornary woman 2"})
	 table.insert(group, {level = 100, hp = "44000", hp_max = "50000", mana = "150", mana_max = "250", moves = "160", moves_max = "170", tags = {"M", "T", "-"}, name = "The coolest dude you know"})

	 end_group()
      end
      -- END SIMULATE STUFF

      DoAfterSpecial(.2, "loaded()", 12)
      window(true)
]]>
</script>

</muclient>
