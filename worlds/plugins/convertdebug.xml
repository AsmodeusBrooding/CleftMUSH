<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Monday, July 20, 2009, 10:47 AM -->
<!-- MuClient version 4.43 -->

<!-- Plugin "Convert_Packet_Debug" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Convert_Packet_Debug"
   author="Nick Gammon"
   id="cae868ff0b7d205596cf6db7"
   language="Lua"
   purpose="Converts packet debug lines for Test Trigger"
   date_written="2009-07-20 10:45:55"
   requires="4.40"
   version="1.0"
   >
<description trim="y">
<![CDATA[
1. Copy some packet debug to the Clipboard (possibly omitting sent packets)

2. Type: convert_packet

3. Converted packet will be echoed to output.

Extra lines which don't look like packet debug will be ignored.

]]>
</description>

</plugin>


<!--  Aliases  -->

<aliases>
  <alias
   script="convert_packet"
   match="convert_packet"
   enabled="y"
   sequence="100"
  >
  </alias>
</aliases>

<!--  Script  -->


<script>
<![CDATA[
function convert_packet (name, line, wildcards)
  clip = string.gsub (GetClipboard (), "\r", "")
 
  require "getlines"
  
  print (string.rep ("-", 60))
  
  local t = {}
  
  for line in getlines (clip) do
    hex = string.match (line, "^................   ([%x ]+)$")
    if hex then
      for s in string.gmatch (hex, "%x%x") do
        local c = tonumber (s, 16)
        if c == 0x5C then   -- double a backslash
          table.insert (t, "\\\\")
        elseif c >= 0x20 and c <= 0x7f then 
          table.insert (t, string.char (c))  -- show actual character
        else
          table.insert (t, "\\" .. s)  -- show as hex
        end -- if
      end -- for
    end -- seems to be a packet debug line
  end -- for loop
  
  local s = table.concat (t)
  s = string.gsub (s, "\\0d\\0a", "\n")  -- convert \r\n to \n which works in simulate window
  print (s)  -- new line
  print (string.rep ("-", 60))

end -- function convert_packet
]]>
</script>


</muclient>